{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","catch","Response","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAaeA,EAXF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAC1B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACvB,gCACE,6BAAKF,IACL,4BAAIC,WCeKK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEnB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCUFC,EAnBG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAE/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,G,MAVA,SAACC,GAEd,OADAC,QAAQC,IAAI,wBAAwBF,GAEhC,sBAAKG,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UAA+E,wBAC5EN,EAAMO,SADT,IACmB,wBACC,wBACA,8BAAMN,QAAQC,IAAI,8BAA8BF,EAAMO,iBCgBjEC,E,kDArBX,WAAYR,GAAO,IAAD,6BAChBC,QAAQC,IAAI,0BAA2BF,IACvC,cAAMA,IACDS,MAAM,CACTC,UAAU,GAJI,E,qDAQlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAI1B,WACE,OAAGG,KAAKJ,MAAMC,SACL,sDAEFG,KAAKb,MAAMO,a,GAlBKQ,aCqDdC,E,kDA9Cb,aAAc,IAAD,8BACX,gBAqBFC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SArB3C,EAAKZ,MAAQ,CACXpB,OAAQ,GACR8B,YAAY,IAJH,E,qDAUb,WAAoB,IAAD,OACnBG,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAhC,GACJ,EAAKuB,SAAS,CAACzB,OAAQE,OAExBmC,MAAMzB,QAAQC,IAAI,oBAAoByB,a,oBASzC,WAAS,IAAD,EACwBd,KAAKJ,MAA5BpB,EADD,EACCA,OAAQ8B,EADT,EACSA,YACTS,EAAiBvC,EAAOwC,QAAO,SAAAxC,GACjC,OAAOA,EAAOP,KAAKgD,cAAcC,SAASZ,EAAYW,kBAExD,OAAQzC,EAAO2C,OAGX,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAckB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5B,OAAQuC,WAP1B,6C,GAjCUb,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAEL,cAAC,EAAD,IAEDC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.3119a99c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) =>{\n  return(\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt='robots' src={`https://robohash.org/${id}?size=220x220`} />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n  )\n}\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\nreturn (\n  <div>\n    {\n      robots.map((user, i) => {\n          return (\n            <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n            />\n          );\n      })\n    }\n  </div>\n  );\n}\n\nexport default CardList\n","import React from 'react';\n\nconst Searchbox = ({searchfield, searchChange}) =>{\n\n  return(\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search-Robots\"\n        onChange={searchChange} //proprietà HTML nativa onChange\n                                //che riceve i valori che arrivato dall'evento\n\n        >\n      </input>\n    </div>\n\n  );\n\n}\n\nexport default Searchbox;\n","import React from 'react'\n\nconst Scroll = (props) => { //con props si ricevono le info definite dei children\n  console.log('scroll function props',props) //lancoare app per vedere il risultato delle props => riceve l'oggetto children\n  return(\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}><div>{/*il css all'interno di jsx si dichiara all'interno di {{}} doppia parentesi graffa*/}</div>\n        {props.children} <div>{/*in questo modo vengono manipolati i children*/}</div>\n                          <div>{/*sintassi corretta per commentare all'interno di JSX*/}</div>\n                          <div>{console.log('props children manipulation',props.children)}</div>\n      </div>\n  );}\n\nexport default Scroll\n\n//Componente di tipo parent che può manipolare i Children gerarchicamente al di sotto di esso.\n","import React, {Component} from 'react';\n\n  class ErrorBoundry extends Component{\n    constructor(props){\n      console.log('after constructor props', props)\n      super(props);\n      this.state={\n        hasError: false\n      }\n    }\n\n    componentDidCatch(error, info){\n      this.setState({hasError:true})\n\n    }\n\n    render(){\n      if(this.state.hasError){\n        return <h2>something went wrong</h2>\n      }\n      return this.props.children\n    }\n  }\n\nexport default ErrorBoundry;\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList'\n// import {robots} from './robots';\nimport Searchbox from '../components/Searchbox'\nimport './App.css'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nclass App extends Component { //utilizzo degli state di React\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchField:''\n    }\n  }\n\n\n\n  componentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json()}) //response in formato json\n    .then(user => {\n      this.setState({robots: user}) //selezione ed imposta lo state come da sintassi standard di REACT\n    })\n    .catch(console.log('catching response',Response)) //Intercetta evenuali errori\n    ;\n  }\n\n//Questa funzione ha il compito di memorizzare il valore dell'evento inserito nel searchbox da passare allo STATE dell'app\n  onSearchChange = (event) => { //funzione passata come metodo al searchBox per intercettare l'evento\n      this.setState({searchField: event.target.value }) //target.value ritorna il valore passato dall'evento\n      }\n\n  render(){\n    const {robots, searchField} = this.state //destrutturazione di assegnazione dei valori di state a due variabili\n    const filteredRobots = robots.filter(robots =>{\n        return robots.name.toLowerCase().includes(searchField.toLowerCase())\n      })\n      return !robots.length ?\n        <h1>Loading</h1> :\n        (\n          <div className=\"tc\">\n            <h1 className=\"f1\">RoboFriends</h1>\n            <Searchbox searchChange={this.onSearchChange}/>\n            <Scroll>\n              <ErrorBoundry>\n                <CardList robots={filteredRobots}/>\n              </ErrorBoundry>\n            </Scroll>\n          </div>\n        );\n      }\n    }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>,\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}